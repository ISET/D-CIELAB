function pix = angle2pix(display,angle,units)%% function angle2pix(display,angle,[units])%    Transform fov to number of pixels on screen%%  Inputs:%    display - ISET compatible display structure%    angle   - visual angle of scene%    units   - units of angle, default 'deg'%%  Output:%    pix     - number of pixels on screen%%  Example:%    d = displayCreate;%    n = angle2pix(d,2,'deg');%%  See also:%    pix2angle%% (HJ) Aug, 2013%% Check inputif nargin < 1, error('Display structure required'); endif nargin < 2, error('Visual angle required'); endif nargin < 3, units = 'deg'; endif isempty(units), units = 'deg'; end%% Compute number of pixels%  Check and convert unitsswitch lower(units)    case {'rad','radians'}        angle = ieRad2deg(angle);    case {'deg','degree'}        if angle < -360 || angle > 360            warning('Angle is to be in degree by default, please check');        end    case {'arcmin','arcsec'}        angle = angle / ieUnitScaleFactor(units);        angle = ieRad2deg(angle);    otherwise        error('Unknown units for visual angle');end%  Compute number of pixelsmpd  = displayGet(display,'meters per dot');                      dist = displayGet(display,'Viewing Distance');degPerPixel = ieRad2deg(atan( mpd / dist));pix = round(angle / degPerPixel);end