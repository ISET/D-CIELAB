function [trial, status] = cbTrialDetection(display, stimParams)
%% function [trial, status] = cbTrial(display, stimParams)
%    function to generate a stimulus for color detection experiment
% 
%  Inputs:
%    display    - display structure initialized by initDisplay
%    stimParams - stimulus parameters structure generated by initSimParams
%
%  Outputs:
%    trial      - generated staircase trial
%    status     - completion status
%  
%  See also:
%    initDisplay, initStimParams, doTrial, cbSingleFrame
%
%  History:
%    (HJ) Dec, 2012 : Adopted from cocTrial
%    (HJ) Aug, 2013 : Clean up, commented and increase robustness

%% Check inputs
if nargin < 1, error('Display structure required'); end
if nargin < 2, error('Stimulus parameter structure required'); end

%% Init parameters
%  Load gamma table
cmap = displayGet(display,'gamma table');

%% Make reference stim
%  Compute size for one patch
patchWidth  = angle2pix(display, stimParams.visualSize(2));
patchHeight = angle2pix(display, stimParams.visualSize(1));

%  Compute stimulus size (2 patches + 1 gap)
stimWidth   = round(2*patchWidth/(1-stimParams.gapSize)); % width in pix
stimHeight  = patchHeight; % height in pix

%  Init reference image
cbColor = stimParams.refColor;
cbIm    = repmat(reshape(cbColor,[1 1 3]),stimHeight,stimWidth);

%  Compute gap position
gapSize = stimParams.gapSize;
gapL    = floor((0.5-gapSize/2)*stimWidth);
gapR    = floor((0.5+gapSize/2)*stimWidth);

%  Set gap color
for i = 1 : 3
    cbIm(:, gapL +1:gapR,i)  = display.backColorRgb(i);
end

%  Blur stimulus if needed
if stimParams.Gsig > 0
    gFilter = fspecial('Gaussian',[10 10],stimParams.Gsig);
    cbIm    = imfilter(cbIm, gFilter, 'same', display.backColorRgb(1));
end

%% Make match stimulus
%  Set computed parameters
stimParams.gapL    = gapL;
stimParams.gapR    = gapR;
stimParams.bgColor = display.backColorRgb;
stimParams.cbType  = stimParams.cbType;

matchIm            = cbSingleFrame(stimParams,cbIm); % Change the name for this one
matchStim          = createStimulusStruct(matchIm,cmap); % Could get rid of this, right?
matchStim          = cbCreateTextures(display, matchStim); % This one should be changed, create another routine?

%% Make blank stimulus
blankIm   = repmat(reshape(stimParams.bgColor,[1 1 3]),...
                   stimHeight,stimWidth);
blankStim = createStimulusStruct(blankIm,cmap);
blankStim = createTextures(display, blankStim); % Should be simplified also
isi.sound = soundFreqSweep(500, 1000, .05);


%% Build the trial events
trial = addTrialEvent(display,[],'soundEvent',isi );
trial = addTrialEvent(display,trial,'stimulusEvent', 'stimulus', matchStim);
trial = addTrialEvent(display,trial,'ISIEvent', 'stimulus', blankStim,...
                                    'duration', 0.1);

status = 'done';
end